snippet h
#pragma once

namespace ${2}
{
class ${1:`!v expand('%:t:r:s?\.test$??')`}
{
public:
  $1();
  ~$1();

private:
  $1($1 const& other);
  $1($1&& other);

  $1& operator=(const $1&);
  $1& operator=($1&& other);
};
}
endsnippet

snippet ns "namespace .. (namespace)"
namespace ${1}
{
${VISUAL}$0
}
endsnippet

snippet uns "using namespace .. (namespace)"
using namespace ${1}
endsnippet

snippet mc "member constructors implementation"
`!p snip.rv = snip.basename`::`!p snip.rv = snip.basename`(${3})
{
$0
}
endsnippet

snippet mf "member function implementation"
${1:void} `!p snip.rv = snip.basename`::${2}(${3}) ${4:const}
{
$0
}
endsnippet

snippet cs "Add class scope"
`!p snip.rv = snip.basename`::
endsnippet

